openapi: "3.0.1"
info:
  title: "pickleball-pro"
  version: "0.1.0"
servers:
- url: "https://bmsq3uf3uc.execute-api.us-west-2.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/prod"
paths:
  /matches:
    get:
      operationId: "getMatches"
      responses:
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matches"
    post:
      operationId: "createMatch"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Match"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /matches/{id}:
    delete:
      operationId: "deleteMatch"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "204":
          description: "204 response"
          content: {}
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user:
    post:
      operationId: "createUser"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /players:
    get:
      operationId: "getPlayers"
      responses:
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Players"
    post:
      operationId: "createPlayer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Player"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /players/{id}:
    put:
      operationId: "editPlayer"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Player"
        required: true
      responses:
        "404":
          description: "404 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: "deletePlayer"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "204":
          description: "204 response"
          content: {}
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Player:
      required:
      - "first_name"
      - "image_url"
      - "last_name"
      - "player_id"
      type: "object"
      properties:
        player_id:
          type: "string"
        first_name:
          type: "string"
        last_name:
          type: "string"
        image_url:
          type: "string"
        dominant_hand:
          type: "string"
          enum:
          - "RIGHT"
          - "LEFT"
        notes:
          type: "string"
        phone_number:
          type: "string"
        email:
          type: "string"
        level:
          type: "number"
          format: "double"
    Stat:
      required:
      - "game_index"
      - "player_id"
      - "shot_result"
      - "shot_type"
      type: "object"
      properties:
        player_id:
          type: "string"
        game_index:
          type: "integer"
          format: "int64"
        shot_result:
          type: "string"
          enum:
          - "WINNER"
          - "ERROR"
        shot_type:
          type: "string"
          enum:
          - "SERVE"
          - "DROP"
          - "DINK"
          - "DRIVE"
          - "VOLLEY"
          - "LOB"
          - "OVERHEAD"
        shot_side:
          type: "string"
          enum:
          - "FOREHAND"
          - "BACKHAND"
    User:
      required:
      - "first_name"
      - "image_url"
      - "last_name"
      - "user_id"
      type: "object"
      properties:
        user_id:
          type: "string"
        first_name:
          type: "string"
        last_name:
          type: "string"
    Matches:
      type: "array"
      items:
        type: "object"
        properties:
          schema:
            $ref: "#/components/schemas/Match"
    Error:
      required:
      - "code"
      - "message"
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
    GameScore:
      required:
      - "team1_score"
      - "team2_score"
      type: "object"
      properties:
        team1_score:
          type: "integer"
          format: "int64"
        team2_score:
          type: "integer"
          format: "int64"
    Match:
      required:
      - "date"
      - "match_id"
      - "scores"
      - "team1_player1"
      - "team2_player1"
      type: "object"
      properties:
        match_id:
          type: "string"
        date:
          type: "string"
        team1_player1:
          type: "object"
          properties:
            schema:
              $ref: "#/components/schemas/Player"
        team1_player2:
          type: "object"
          properties:
            schema:
              $ref: "#/components/schemas/Player"
        team2_player1:
          type: "object"
          properties:
            schema:
              $ref: "#/components/schemas/Player"
        team2_player2:
          type: "object"
          properties:
            schema:
              $ref: "#/components/schemas/Player"
        scores:
          type: "array"
          items:
            type: "object"
            properties:
              schema:
                $ref: "#/components/schemas/GameScore"
        stats:
          type: "array"
          items:
            type: "object"
            properties:
              schema:
                $ref: "#/components/schemas/Stat"
    Players:
      type: "array"
      items:
        type: "object"
        properties:
          schema:
            $ref: "#/components/schemas/Player"
